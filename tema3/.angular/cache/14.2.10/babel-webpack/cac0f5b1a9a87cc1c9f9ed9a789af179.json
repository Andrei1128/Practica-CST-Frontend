{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from 'ng-zorro-antd/core/form';\nimport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule } from 'ng-zorro-antd/core/form';\nimport { getStatusClassNames, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\nconst _c0 = [\"nz-input-group-slot\", \"\"];\n\nfunction NzInputGroupSlotComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.icon);\n  }\n}\n\nfunction NzInputGroupSlotComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.template);\n  }\n}\n\nconst _c1 = [\"*\"];\n\nfunction NzInputGroupComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r7.nzAddOnBeforeIcon)(\"template\", ctx_r7.nzAddOnBefore);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_span_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵclassProp(\"ant-input-affix-wrapper-disabled\", ctx_r8.disabled)(\"ant-input-affix-wrapper-sm\", ctx_r8.isSmall)(\"ant-input-affix-wrapper-lg\", ctx_r8.isLarge)(\"ant-input-affix-wrapper-focused\", ctx_r8.focused);\n    i0.ɵɵproperty(\"ngClass\", ctx_r8.affixInGroupStatusCls);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r9.nzAddOnAfterIcon)(\"template\", ctx_r9.nzAddOnAfter);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_1_Template, 1, 2, \"span\", 5);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_span_0_span_2_Template, 2, 10, \"span\", 6);\n    i0.ɵɵtemplate(3, NzInputGroupComponent_span_0_span_3_Template, 1, 2, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnBefore || ctx_r0.nzAddOnBeforeIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isAffix || ctx_r0.hasFeedback)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnAfter || ctx_r0.nzAddOnAfterIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_Template, 1, 1, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAffix)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r13.nzPrefixIcon)(\"template\", ctx_r13.nzPrefix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_nz_form_item_feedback_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-form-item-feedback-icon\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"status\", ctx_r16.status);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_span_2_nz_form_item_feedback_icon_1_Template, 1, 1, \"nz-form-item-feedback-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r15.nzSuffixIcon)(\"template\", ctx_r15.nzSuffix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isFeedback);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_3_span_0_Template, 1, 2, \"span\", 11);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_ng_template_3_span_2_Template, 2, 3, \"span\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzPrefix || ctx_r4.nzPrefixIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzSuffix || ctx_r4.nzSuffixIcon || ctx_r4.isFeedback);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵelement(1, \"nz-form-item-feedback-icon\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"status\", ctx_r17.status);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_5_span_1_Template, 2, 1, \"span\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isAddOn && !ctx_r6.isAffix && ctx_r6.isFeedback);\n  }\n}\n\nconst _c2 = [[[\"textarea\", \"nz-input\", \"\"]]];\nconst _c3 = [\"textarea[nz-input]\"];\n\nclass NzInputDirective {\n  constructor(ngControl, renderer, elementRef, hostView, directionality, nzFormStatusService, nzFormNoStatusService) {\n    this.ngControl = ngControl;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.hostView = hostView;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.nzFormNoStatusService = nzFormNoStatusService;\n    this.nzBorderless = false;\n    this.nzSize = 'default';\n    this.nzStatus = '';\n    this._disabled = false;\n    this.disabled$ = new Subject();\n    this.dir = 'ltr'; // status\n\n    this.prefixCls = 'ant-input';\n    this.status = '';\n    this.statusCls = {};\n    this.hasFeedback = false;\n    this.feedbackRef = null;\n    this.components = [];\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value != null && `${value}` !== 'false';\n  }\n\n  ngOnInit() {\n    this.nzFormStatusService?.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n      return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n    }), takeUntil(this.destroy$)).subscribe(({\n      status,\n      hasFeedback\n    }) => {\n      this.setStatusStyles(status, hasFeedback);\n    });\n\n    if (this.ngControl) {\n      this.ngControl.statusChanges?.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$)).subscribe(() => {\n        this.disabled$.next(this.ngControl.disabled);\n      });\n    }\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      disabled,\n      nzStatus\n    } = changes;\n\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n\n    if (nzStatus) {\n      this.setStatusStyles(this.nzStatus, this.hasFeedback);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setStatusStyles(status, hasFeedback) {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.renderFeedbackIcon(); // render status if nzStatus is set\n\n    this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n    Object.keys(this.statusCls).forEach(status => {\n      if (this.statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n\n  renderFeedbackIcon() {\n    if (!this.status || !this.hasFeedback || !!this.nzFormNoStatusService) {\n      // remove feedback\n      this.hostView.clear();\n      this.feedbackRef = null;\n      return;\n    }\n\n    this.feedbackRef = this.feedbackRef || this.hostView.createComponent(NzFormItemFeedbackIconComponent);\n    this.feedbackRef.location.nativeElement.classList.add('ant-input-suffix');\n    this.feedbackRef.instance.status = this.status;\n    this.feedbackRef.instance.updateIcon();\n  }\n\n}\n\nNzInputDirective.ɵfac = function NzInputDirective_Factory(t) {\n  return new (t || NzInputDirective)(i0.ɵɵdirectiveInject(i1.NgControl, 10), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzFormStatusService, 8), i0.ɵɵdirectiveInject(i3.NzFormNoStatusService, 8));\n};\n\nNzInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputDirective,\n  selectors: [[\"input\", \"nz-input\", \"\"], [\"textarea\", \"nz-input\", \"\"]],\n  hostVars: 11,\n  hostBindings: function NzInputDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n      i0.ɵɵclassProp(\"ant-input-disabled\", ctx.disabled)(\"ant-input-borderless\", ctx.nzBorderless)(\"ant-input-lg\", ctx.nzSize === \"large\")(\"ant-input-sm\", ctx.nzSize === \"small\")(\"ant-input-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzBorderless: \"nzBorderless\",\n    nzSize: \"nzSize\",\n    nzStatus: \"nzStatus\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"nzInput\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzInputDirective.prototype, \"nzBorderless\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[nz-input],textarea[nz-input]',\n      exportAs: 'nzInput',\n      host: {\n        '[class.ant-input-disabled]': 'disabled',\n        '[class.ant-input-borderless]': 'nzBorderless',\n        '[class.ant-input-lg]': `nzSize === 'large'`,\n        '[class.ant-input-sm]': `nzSize === 'small'`,\n        '[attr.disabled]': 'disabled || null',\n        '[class.ant-input-rtl]': `dir=== 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormNoStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzBorderless: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputGroupSlotComponent {\n  constructor() {\n    this.icon = null;\n    this.type = null;\n    this.template = null;\n  }\n\n}\n\nNzInputGroupSlotComponent.ɵfac = function NzInputGroupSlotComponent_Factory(t) {\n  return new (t || NzInputGroupSlotComponent)();\n};\n\nNzInputGroupSlotComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupSlotComponent,\n  selectors: [[\"\", \"nz-input-group-slot\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzInputGroupSlotComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-addon\", ctx.type === \"addon\")(\"ant-input-prefix\", ctx.type === \"prefix\")(\"ant-input-suffix\", ctx.type === \"suffix\");\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    type: \"type\",\n    template: \"template\"\n  },\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzInputGroupSlotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzInputGroupSlotComponent_span_0_Template, 1, 1, \"span\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupSlotComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.template);\n    }\n  },\n  dependencies: [i4.NgIf, i2$1.NzIconDirective, i3$1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupSlotComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-input-group-slot]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <span nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></span>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `,\n      host: {\n        '[class.ant-input-group-addon]': `type === 'addon'`,\n        '[class.ant-input-prefix]': `type === 'prefix'`,\n        '[class.ant-input-suffix]': `type === 'suffix'`\n      }\n    }]\n  }], null, {\n    icon: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n\n}\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = function NzInputGroupWhitSuffixOrPrefixDirective_Factory(t) {\n  return new (t || NzInputGroupWhitSuffixOrPrefixDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputGroupWhitSuffixOrPrefixDirective,\n  selectors: [[\"nz-input-group\", \"nzSuffix\", \"\"], [\"nz-input-group\", \"nzPrefix\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupWhitSuffixOrPrefixDirective, [{\n    type: Directive,\n    args: [{\n      selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass NzInputGroupComponent {\n  constructor(focusMonitor, elementRef, renderer, cdr, directionality, nzFormStatusService, nzFormNoStatusService) {\n    this.focusMonitor = focusMonitor;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.nzFormNoStatusService = nzFormNoStatusService;\n    this.nzAddOnBeforeIcon = null;\n    this.nzAddOnAfterIcon = null;\n    this.nzPrefixIcon = null;\n    this.nzSuffixIcon = null;\n    this.nzStatus = '';\n    this.nzSize = 'default';\n    this.nzSearch = false;\n    this.nzCompact = false;\n    this.isLarge = false;\n    this.isSmall = false;\n    this.isAffix = false;\n    this.isAddOn = false;\n    this.isFeedback = false;\n    this.focused = false;\n    this.disabled = false;\n    this.dir = 'ltr'; // status\n\n    this.prefixCls = 'ant-input';\n    this.affixStatusCls = {};\n    this.groupStatusCls = {};\n    this.affixInGroupStatusCls = {};\n    this.status = '';\n    this.hasFeedback = false;\n    this.destroy$ = new Subject();\n  }\n\n  updateChildrenInputSize() {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => item.nzSize = this.nzSize);\n    }\n  }\n\n  ngOnInit() {\n    this.nzFormStatusService?.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n      return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n    }), takeUntil(this.destroy$)).subscribe(({\n      status,\n      hasFeedback\n    }) => {\n      this.setStatusStyles(status, hasFeedback);\n    });\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      this.focused = !!focusOrigin;\n      this.cdr.markForCheck();\n    });\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngAfterContentInit() {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$.pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map(input => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some(input => input.disabled)), takeUntil(this.destroy$)).subscribe(disabled => {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzSize,\n      nzSuffix,\n      nzPrefix,\n      nzPrefixIcon,\n      nzSuffixIcon,\n      nzAddOnAfter,\n      nzAddOnBefore,\n      nzAddOnAfterIcon,\n      nzAddOnBeforeIcon,\n      nzStatus\n    } = changes;\n\n    if (nzSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.nzSize === 'large';\n      this.isSmall = this.nzSize === 'small';\n    }\n\n    if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n      this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    }\n\n    if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n      this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n      this.nzFormNoStatusService?.noFormStatus?.next(this.isAddOn);\n    }\n\n    if (nzStatus) {\n      this.setStatusStyles(this.nzStatus, this.hasFeedback);\n    }\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setStatusStyles(status, hasFeedback) {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.isFeedback = !!status && hasFeedback;\n    const baseAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    this.isAffix = baseAffix || !this.isAddOn && hasFeedback;\n    this.affixInGroupStatusCls = this.isAffix || this.isFeedback ? this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, status, hasFeedback) : {};\n    this.cdr.markForCheck(); // render status if nzStatus is set\n\n    this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, this.isAddOn ? '' : status, this.isAddOn ? false : hasFeedback);\n    this.groupStatusCls = getStatusClassNames(`${this.prefixCls}-group-wrapper`, this.isAddOn ? status : '', this.isAddOn ? hasFeedback : false);\n    const statusCls = { ...this.affixStatusCls,\n      ...this.groupStatusCls\n    };\n    Object.keys(statusCls).forEach(status => {\n      if (statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n\n}\n\nNzInputGroupComponent.ɵfac = function NzInputGroupComponent_Factory(t) {\n  return new (t || NzInputGroupComponent)(i0.ɵɵdirectiveInject(i1$1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzFormStatusService, 8), i0.ɵɵdirectiveInject(i3.NzFormNoStatusService, 8));\n};\n\nNzInputGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupComponent,\n  selectors: [[\"nz-input-group\"]],\n  contentQueries: function NzInputGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzInputDirective = _t);\n    }\n  },\n  hostVars: 40,\n  hostBindings: function NzInputGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-compact\", ctx.nzCompact)(\"ant-input-search-enter-button\", ctx.nzSearch)(\"ant-input-search\", ctx.nzSearch)(\"ant-input-search-rtl\", ctx.dir === \"rtl\")(\"ant-input-search-sm\", ctx.nzSearch && ctx.isSmall)(\"ant-input-search-large\", ctx.nzSearch && ctx.isLarge)(\"ant-input-group-wrapper\", ctx.isAddOn)(\"ant-input-group-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-wrapper-lg\", ctx.isAddOn && ctx.isLarge)(\"ant-input-group-wrapper-sm\", ctx.isAddOn && ctx.isSmall)(\"ant-input-affix-wrapper\", ctx.isAffix && !ctx.isAddOn)(\"ant-input-affix-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-affix-wrapper-focused\", ctx.isAffix && ctx.focused)(\"ant-input-affix-wrapper-disabled\", ctx.isAffix && ctx.disabled)(\"ant-input-affix-wrapper-lg\", ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-affix-wrapper-sm\", ctx.isAffix && !ctx.isAddOn && ctx.isSmall)(\"ant-input-group\", !ctx.isAffix && !ctx.isAddOn)(\"ant-input-group-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-lg\", !ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-group-sm\", !ctx.isAffix && !ctx.isAddOn && ctx.isSmall);\n    }\n  },\n  inputs: {\n    nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\",\n    nzAddOnAfterIcon: \"nzAddOnAfterIcon\",\n    nzPrefixIcon: \"nzPrefixIcon\",\n    nzSuffixIcon: \"nzSuffixIcon\",\n    nzAddOnBefore: \"nzAddOnBefore\",\n    nzAddOnAfter: \"nzAddOnAfter\",\n    nzPrefix: \"nzPrefix\",\n    nzStatus: \"nzStatus\",\n    nzSuffix: \"nzSuffix\",\n    nzSize: \"nzSize\",\n    nzSearch: \"nzSearch\",\n    nzCompact: \"nzCompact\"\n  },\n  exportAs: [\"nzInputGroup\"],\n  features: [i0.ɵɵProvidersFeature([NzFormNoStatusService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 7,\n  vars: 2,\n  consts: [[\"class\", \"ant-input-wrapper ant-input-group\", 4, \"ngIf\", \"ngIfElse\"], [\"noAddOnTemplate\", \"\"], [\"affixTemplate\", \"\"], [\"contentTemplate\", \"\"], [1, \"ant-input-wrapper\", \"ant-input-group\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"class\", \"ant-input-affix-wrapper\", 3, \"ant-input-affix-wrapper-disabled\", \"ant-input-affix-wrapper-sm\", \"ant-input-affix-wrapper-lg\", \"ant-input-affix-wrapper-focused\", \"ngClass\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\"], [1, \"ant-input-affix-wrapper\", 3, \"ngClass\"], [3, \"ngTemplateOutlet\"], [3, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\"], [3, \"status\", 4, \"ngIf\"], [3, \"status\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\"]],\n  template: function NzInputGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzInputGroupComponent_span_0_Template, 4, 4, \"span\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_1_Template, 1, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzInputGroupComponent_ng_template_3_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, NzInputGroupComponent_ng_template_5_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.isAddOn)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i3.NzFormItemFeedbackIconComponent, NzInputGroupSlotComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-group',\n      exportAs: 'nzInputGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [NzFormNoStatusService],\n      template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `,\n      host: {\n        '[class.ant-input-group-compact]': `nzCompact`,\n        '[class.ant-input-search-enter-button]': `nzSearch`,\n        '[class.ant-input-search]': `nzSearch`,\n        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n        '[class.ant-input-group-wrapper]': `isAddOn`,\n        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.FocusMonitor\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormNoStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzInputDirective: [{\n      type: ContentChildren,\n      args: [NzInputDirective]\n    }],\n    nzAddOnBeforeIcon: [{\n      type: Input\n    }],\n    nzAddOnAfterIcon: [{\n      type: Input\n    }],\n    nzPrefixIcon: [{\n      type: Input\n    }],\n    nzSuffixIcon: [{\n      type: Input\n    }],\n    nzAddOnBefore: [{\n      type: Input\n    }],\n    nzAddOnAfter: [{\n      type: Input\n    }],\n    nzPrefix: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzCompact: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzAutosizeDirective {\n  constructor(elementRef, ngZone, platform, resizeService) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.autosize = false;\n    this.el = this.elementRef.nativeElement;\n    this.maxHeight = null;\n    this.minHeight = null;\n    this.destroy$ = new Subject();\n    this.inputGap = 10;\n  }\n\n  set nzAutosize(value) {\n    const isAutoSizeType = data => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n\n    if (typeof value === 'string' || value === true) {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = true;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }\n\n  resizeToFitContent(force = false) {\n    this.cacheTextareaLineHeight(); // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el;\n    const value = textarea.value; // Only resize if the value or minRows have changed since these calculations can be expensive.\n\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n\n    const placeholderText = textarea.placeholder; // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n\n    textarea.classList.add('nz-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n\n    if (this.maxHeight !== null && height > this.maxHeight) {\n      height = this.maxHeight;\n    }\n\n    if (this.minHeight !== null && height < this.minHeight) {\n      height = this.minHeight;\n    } // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n\n\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('nz-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText; // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n        const {\n          selectionStart,\n          selectionEnd\n        } = textarea; // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n\n        if (!this.destroy$.isStopped && document.activeElement === textarea) {\n          textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n      }));\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  cacheTextareaLineHeight() {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    } // Use a clone element because we have to override some styles.\n\n\n    const textareaClone = this.el.cloneNode(false);\n    textareaClone.rows = 1; // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = ''; // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n\n    textareaClone.style.overflow = 'hidden';\n    this.el.parentNode.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n    this.el.parentNode.removeChild(textareaClone); // Min and max heights have to be re-calculated if the cached line height changes\n\n    this.maxHeight = this.setMaxHeight();\n    this.minHeight = this.setMinHeight();\n  }\n\n  setMinHeight() {\n    const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (minHeight !== null) {\n      this.el.style.minHeight = `${minHeight}px`;\n    }\n\n    return minHeight;\n  }\n\n  setMaxHeight() {\n    const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (maxHeight !== null) {\n      this.el.style.maxHeight = `${maxHeight}px`;\n    }\n\n    return maxHeight;\n  }\n\n  noopInputHandler() {// no-op handler that ensures we're running change detection on input events.\n  }\n\n  ngAfterViewInit() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n\n}\n\nNzAutosizeDirective.ɵfac = function NzAutosizeDirective_Factory(t) {\n  return new (t || NzAutosizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.Platform), i0.ɵɵdirectiveInject(i2$2.NzResizeService));\n};\n\nNzAutosizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzAutosizeDirective,\n  selectors: [[\"textarea\", \"nzAutosize\", \"\"]],\n  hostAttrs: [\"rows\", \"1\"],\n  hostBindings: function NzAutosizeDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function NzAutosizeDirective_input_HostBindingHandler() {\n        return ctx.noopInputHandler();\n      });\n    }\n  },\n  inputs: {\n    nzAutosize: \"nzAutosize\"\n  },\n  exportAs: [\"nzAutosize\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutosizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[nzAutosize]',\n      exportAs: 'nzAutosize',\n      host: {\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        rows: '1',\n        '(input)': 'noopInputHandler()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.Platform\n    }, {\n      type: i2$2.NzResizeService\n    }];\n  }, {\n    nzAutosize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTextareaCountComponent {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzMaxCharacterCount = 0;\n\n    this.nzComputeCharacterCount = v => v.length;\n\n    this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n\n    this.configChange$ = new Subject();\n    this.destroy$ = new Subject();\n  }\n\n  ngAfterContentInit() {\n    if (!this.nzInputDirective && isDevMode()) {\n      throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n    }\n\n    if (this.nzInputDirective.ngControl) {\n      const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n      merge(valueChanges, this.configChange$).pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value)).subscribe(value => {\n        this.setDataCount(value);\n      });\n    }\n  }\n\n  setDataCount(value) {\n    const inputValue = isNotNil(value) ? String(value) : '';\n    const currentCount = this.nzComputeCharacterCount(inputValue);\n    const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n    this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n  }\n\n  ngOnDestroy() {\n    this.configChange$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTextareaCountComponent.ɵfac = function NzTextareaCountComponent_Factory(t) {\n  return new (t || NzTextareaCountComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTextareaCountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTextareaCountComponent,\n  selectors: [[\"nz-textarea-count\"]],\n  contentQueries: function NzTextareaCountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzInputDirective = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-input-textarea-show-count\"],\n  inputs: {\n    nzMaxCharacterCount: \"nzMaxCharacterCount\",\n    nzComputeCharacterCount: \"nzComputeCharacterCount\",\n    nzFormatter: \"nzFormatter\"\n  },\n  ngContentSelectors: _c3,\n  decls: 1,\n  vars: 0,\n  template: function NzTextareaCountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextareaCountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-textarea-count',\n      template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n      host: {\n        class: 'ant-input-textarea-show-count'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzInputDirective: [{\n      type: ContentChild,\n      args: [NzInputDirective, {\n        static: true\n      }]\n    }],\n    nzMaxCharacterCount: [{\n      type: Input\n    }],\n    nzComputeCharacterCount: [{\n      type: Input\n    }],\n    nzFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputModule {}\n\nNzInputModule.ɵfac = function NzInputModule_Factory(t) {\n  return new (t || NzInputModule)();\n};\n\nNzInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzInputModule\n});\nNzInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective],\n      exports: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective],\n      imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };","map":{"version":3,"names":["__decorate","i0","Directive","Optional","Self","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","isDevMode","ContentChild","NgModule","Subject","merge","EMPTY","distinctUntilChanged","takeUntil","filter","startWith","switchMap","mergeMap","map","i3","NzFormItemFeedbackIconComponent","NzFormNoStatusService","NzFormPatchModule","getStatusClassNames","InputBoolean","isNotNil","i1","i2","BidiModule","i1$1","i4","CommonModule","i2$1","NzIconModule","i3$1","NzOutletModule","i1$2","PlatformModule","i2$2","NzInputDirective","constructor","ngControl","renderer","elementRef","hostView","directionality","nzFormStatusService","nzFormNoStatusService","nzBorderless","nzSize","nzStatus","_disabled","disabled$","dir","prefixCls","status","statusCls","hasFeedback","feedbackRef","components","destroy$","addClass","nativeElement","disabled","value","ngOnInit","formStatusChanges","pipe","pre","cur","subscribe","setStatusStyles","statusChanges","next","change","direction","ngOnChanges","changes","ngOnDestroy","complete","renderFeedbackIcon","Object","keys","forEach","removeClass","clear","createComponent","location","classList","add","instance","updateIcon","ɵfac","NgControl","Renderer2","ElementRef","ViewContainerRef","Directionality","NzFormStatusService","ɵdir","prototype","type","args","selector","exportAs","host","decorators","NzInputGroupSlotComponent","icon","template","ɵcmp","NgIf","NzIconDirective","NzStringTemplateOutletDirective","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","NzInputGroupWhitSuffixOrPrefixDirective","NzInputGroupComponent","focusMonitor","cdr","nzAddOnBeforeIcon","nzAddOnAfterIcon","nzPrefixIcon","nzSuffixIcon","nzSearch","nzCompact","isLarge","isSmall","isAffix","isAddOn","isFeedback","focused","affixStatusCls","groupStatusCls","affixInGroupStatusCls","updateChildrenInputSize","listOfNzInputDirective","item","monitor","focusOrigin","markForCheck","ngAfterContentInit","listOfInputChange$","list","input","some","nzSuffix","nzPrefix","nzAddOnAfter","nzAddOnBefore","noFormStatus","stopMonitoring","baseAffix","FocusMonitor","ChangeDetectorRef","NgClass","NgTemplateOutlet","providers","NzAutosizeDirective","ngZone","platform","resizeService","autosize","el","maxHeight","minHeight","inputGap","nzAutosize","isAutoSizeType","data","maxRows","minRows","setMaxHeight","setMinHeight","resizeToFitContent","force","cacheTextareaLineHeight","cachedLineHeight","textarea","previousMinRows","previousValue","placeholderText","placeholder","height","Math","round","scrollHeight","style","remove","requestAnimationFrame","runOutsideAngular","selectionStart","selectionEnd","isStopped","document","activeElement","setSelectionRange","parentNode","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","appendChild","clientHeight","removeChild","noopInputHandler","ngAfterViewInit","isBrowser","ngDoCheck","NgZone","Platform","NzResizeService","NzTextareaCountComponent","nzMaxCharacterCount","nzComputeCharacterCount","v","length","nzFormatter","c","m","configChange$","nzInputDirective","Error","valueChanges","setDataCount","inputValue","String","currentCount","dataCount","setAttribute","class","static","NzInputModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["C:/Users/Administrator/Facultate/CST/teme/tema3/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-input.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from 'ng-zorro-antd/core/form';\nimport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule } from 'ng-zorro-antd/core/form';\nimport { getStatusClassNames, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\n\nclass NzInputDirective {\n    constructor(ngControl, renderer, elementRef, hostView, directionality, nzFormStatusService, nzFormNoStatusService) {\n        this.ngControl = ngControl;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.hostView = hostView;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.nzFormNoStatusService = nzFormNoStatusService;\n        this.nzBorderless = false;\n        this.nzSize = 'default';\n        this.nzStatus = '';\n        this._disabled = false;\n        this.disabled$ = new Subject();\n        this.dir = 'ltr';\n        // status\n        this.prefixCls = 'ant-input';\n        this.status = '';\n        this.statusCls = {};\n        this.hasFeedback = false;\n        this.feedbackRef = null;\n        this.components = [];\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-input');\n    }\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value != null && `${value}` !== 'false';\n    }\n    ngOnInit() {\n        this.nzFormStatusService?.formStatusChanges\n            .pipe(distinctUntilChanged((pre, cur) => {\n            return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }), takeUntil(this.destroy$))\n            .subscribe(({ status, hasFeedback }) => {\n            this.setStatusStyles(status, hasFeedback);\n        });\n        if (this.ngControl) {\n            this.ngControl.statusChanges\n                ?.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.disabled$.next(this.ngControl.disabled);\n            });\n        }\n        this.dir = this.directionality.value;\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngOnChanges(changes) {\n        const { disabled, nzStatus } = changes;\n        if (disabled) {\n            this.disabled$.next(this.disabled);\n        }\n        if (nzStatus) {\n            this.setStatusStyles(this.nzStatus, this.hasFeedback);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setStatusStyles(status, hasFeedback) {\n        // set inner status\n        this.status = status;\n        this.hasFeedback = hasFeedback;\n        this.renderFeedbackIcon();\n        // render status if nzStatus is set\n        this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n        Object.keys(this.statusCls).forEach(status => {\n            if (this.statusCls[status]) {\n                this.renderer.addClass(this.elementRef.nativeElement, status);\n            }\n            else {\n                this.renderer.removeClass(this.elementRef.nativeElement, status);\n            }\n        });\n    }\n    renderFeedbackIcon() {\n        if (!this.status || !this.hasFeedback || !!this.nzFormNoStatusService) {\n            // remove feedback\n            this.hostView.clear();\n            this.feedbackRef = null;\n            return;\n        }\n        this.feedbackRef = this.feedbackRef || this.hostView.createComponent(NzFormItemFeedbackIconComponent);\n        this.feedbackRef.location.nativeElement.classList.add('ant-input-suffix');\n        this.feedbackRef.instance.status = this.status;\n        this.feedbackRef.instance.updateIcon();\n    }\n}\nNzInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputDirective, deps: [{ token: i1.NgControl, optional: true, self: true }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i2.Directionality, optional: true }, { token: i3.NzFormStatusService, optional: true }, { token: i3.NzFormNoStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: { nzBorderless: \"nzBorderless\", nzSize: \"nzSize\", nzStatus: \"nzStatus\", disabled: \"disabled\" }, host: { properties: { \"class.ant-input-disabled\": \"disabled\", \"class.ant-input-borderless\": \"nzBorderless\", \"class.ant-input-lg\": \"nzSize === 'large'\", \"class.ant-input-sm\": \"nzSize === 'small'\", \"attr.disabled\": \"disabled || null\", \"class.ant-input-rtl\": \"dir=== 'rtl'\" } }, exportAs: [\"nzInput\"], usesOnChanges: true, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzInputDirective.prototype, \"nzBorderless\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[nz-input],textarea[nz-input]',\n                    exportAs: 'nzInput',\n                    host: {\n                        '[class.ant-input-disabled]': 'disabled',\n                        '[class.ant-input-borderless]': 'nzBorderless',\n                        '[class.ant-input-lg]': `nzSize === 'large'`,\n                        '[class.ant-input-sm]': `nzSize === 'small'`,\n                        '[attr.disabled]': 'disabled || null',\n                        '[class.ant-input-rtl]': `dir=== 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzFormStatusService, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzFormNoStatusService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzBorderless: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputGroupSlotComponent {\n    constructor() {\n        this.icon = null;\n        this.type = null;\n        this.template = null;\n    }\n}\nNzInputGroupSlotComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupSlotComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupSlotComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: { icon: \"icon\", type: \"type\", template: \"template\" }, host: { properties: { \"class.ant-input-group-addon\": \"type === 'addon'\", \"class.ant-input-prefix\": \"type === 'prefix'\", \"class.ant-input-suffix\": \"type === 'suffix'\" } }, ngImport: i0, template: `\n    <span nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></span>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i3$1.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupSlotComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-input-group-slot]',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <span nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></span>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `,\n                    host: {\n                        '[class.ant-input-group-addon]': `type === 'addon'`,\n                        '[class.ant-input-prefix]': `type === 'prefix'`,\n                        '[class.ant-input-suffix]': `type === 'suffix'`\n                    }\n                }]\n        }], propDecorators: { icon: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }] } });\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzInputGroupWhitSuffixOrPrefixDirective, selector: \"nz-input-group[nzSuffix], nz-input-group[nzPrefix]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\nclass NzInputGroupComponent {\n    constructor(focusMonitor, elementRef, renderer, cdr, directionality, nzFormStatusService, nzFormNoStatusService) {\n        this.focusMonitor = focusMonitor;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.nzFormNoStatusService = nzFormNoStatusService;\n        this.nzAddOnBeforeIcon = null;\n        this.nzAddOnAfterIcon = null;\n        this.nzPrefixIcon = null;\n        this.nzSuffixIcon = null;\n        this.nzStatus = '';\n        this.nzSize = 'default';\n        this.nzSearch = false;\n        this.nzCompact = false;\n        this.isLarge = false;\n        this.isSmall = false;\n        this.isAffix = false;\n        this.isAddOn = false;\n        this.isFeedback = false;\n        this.focused = false;\n        this.disabled = false;\n        this.dir = 'ltr';\n        // status\n        this.prefixCls = 'ant-input';\n        this.affixStatusCls = {};\n        this.groupStatusCls = {};\n        this.affixInGroupStatusCls = {};\n        this.status = '';\n        this.hasFeedback = false;\n        this.destroy$ = new Subject();\n    }\n    updateChildrenInputSize() {\n        if (this.listOfNzInputDirective) {\n            this.listOfNzInputDirective.forEach(item => (item.nzSize = this.nzSize));\n        }\n    }\n    ngOnInit() {\n        this.nzFormStatusService?.formStatusChanges\n            .pipe(distinctUntilChanged((pre, cur) => {\n            return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }), takeUntil(this.destroy$))\n            .subscribe(({ status, hasFeedback }) => {\n            this.setStatusStyles(status, hasFeedback);\n        });\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            this.focused = !!focusOrigin;\n            this.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngAfterContentInit() {\n        this.updateChildrenInputSize();\n        const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n        listOfInputChange$\n            .pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map((input) => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some((input) => input.disabled)), takeUntil(this.destroy$))\n            .subscribe(disabled => {\n            this.disabled = disabled;\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzSize, nzSuffix, nzPrefix, nzPrefixIcon, nzSuffixIcon, nzAddOnAfter, nzAddOnBefore, nzAddOnAfterIcon, nzAddOnBeforeIcon, nzStatus } = changes;\n        if (nzSize) {\n            this.updateChildrenInputSize();\n            this.isLarge = this.nzSize === 'large';\n            this.isSmall = this.nzSize === 'small';\n        }\n        if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n            this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n        }\n        if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n            this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n            this.nzFormNoStatusService?.noFormStatus?.next(this.isAddOn);\n        }\n        if (nzStatus) {\n            this.setStatusStyles(this.nzStatus, this.hasFeedback);\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setStatusStyles(status, hasFeedback) {\n        // set inner status\n        this.status = status;\n        this.hasFeedback = hasFeedback;\n        this.isFeedback = !!status && hasFeedback;\n        const baseAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n        this.isAffix = baseAffix || (!this.isAddOn && hasFeedback);\n        this.affixInGroupStatusCls =\n            this.isAffix || this.isFeedback\n                ? (this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, status, hasFeedback))\n                : {};\n        this.cdr.markForCheck();\n        // render status if nzStatus is set\n        this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, this.isAddOn ? '' : status, this.isAddOn ? false : hasFeedback);\n        this.groupStatusCls = getStatusClassNames(`${this.prefixCls}-group-wrapper`, this.isAddOn ? status : '', this.isAddOn ? hasFeedback : false);\n        const statusCls = {\n            ...this.affixStatusCls,\n            ...this.groupStatusCls\n        };\n        Object.keys(statusCls).forEach(status => {\n            if (statusCls[status]) {\n                this.renderer.addClass(this.elementRef.nativeElement, status);\n            }\n            else {\n                this.renderer.removeClass(this.elementRef.nativeElement, status);\n            }\n        });\n    }\n}\nNzInputGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupComponent, deps: [{ token: i1$1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: i3.NzFormStatusService, optional: true }, { token: i3.NzFormNoStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzInputGroupComponent, selector: \"nz-input-group\", inputs: { nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\", nzAddOnAfterIcon: \"nzAddOnAfterIcon\", nzPrefixIcon: \"nzPrefixIcon\", nzSuffixIcon: \"nzSuffixIcon\", nzAddOnBefore: \"nzAddOnBefore\", nzAddOnAfter: \"nzAddOnAfter\", nzPrefix: \"nzPrefix\", nzStatus: \"nzStatus\", nzSuffix: \"nzSuffix\", nzSize: \"nzSize\", nzSearch: \"nzSearch\", nzCompact: \"nzCompact\" }, host: { properties: { \"class.ant-input-group-compact\": \"nzCompact\", \"class.ant-input-search-enter-button\": \"nzSearch\", \"class.ant-input-search\": \"nzSearch\", \"class.ant-input-search-rtl\": \"dir === 'rtl'\", \"class.ant-input-search-sm\": \"nzSearch && isSmall\", \"class.ant-input-search-large\": \"nzSearch && isLarge\", \"class.ant-input-group-wrapper\": \"isAddOn\", \"class.ant-input-group-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-wrapper-lg\": \"isAddOn && isLarge\", \"class.ant-input-group-wrapper-sm\": \"isAddOn && isSmall\", \"class.ant-input-affix-wrapper\": \"isAffix && !isAddOn\", \"class.ant-input-affix-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-affix-wrapper-focused\": \"isAffix && focused\", \"class.ant-input-affix-wrapper-disabled\": \"isAffix && disabled\", \"class.ant-input-affix-wrapper-lg\": \"isAffix && !isAddOn && isLarge\", \"class.ant-input-affix-wrapper-sm\": \"isAffix && !isAddOn && isSmall\", \"class.ant-input-group\": \"!isAffix && !isAddOn\", \"class.ant-input-group-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-lg\": \"!isAffix && !isAddOn && isLarge\", \"class.ant-input-group-sm\": \"!isAffix && !isAddOn && isSmall\" } }, providers: [NzFormNoStatusService], queries: [{ propertyName: \"listOfNzInputDirective\", predicate: NzInputDirective }], exportAs: [\"nzInputGroup\"], usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i3.NzFormItemFeedbackIconComponent, selector: \"nz-form-item-feedback-icon\", inputs: [\"status\"], exportAs: [\"nzFormFeedbackIcon\"] }, { kind: \"component\", type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: [\"icon\", \"type\", \"template\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-input-group',\n                    exportAs: 'nzInputGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [NzFormNoStatusService],\n                    template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `,\n                    host: {\n                        '[class.ant-input-group-compact]': `nzCompact`,\n                        '[class.ant-input-search-enter-button]': `nzSearch`,\n                        '[class.ant-input-search]': `nzSearch`,\n                        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n                        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n                        '[class.ant-input-group-wrapper]': `isAddOn`,\n                        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n                        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n                        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n                        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n                        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n                        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n                        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n                        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzFormStatusService, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzFormNoStatusService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { listOfNzInputDirective: [{\n                type: ContentChildren,\n                args: [NzInputDirective]\n            }], nzAddOnBeforeIcon: [{\n                type: Input\n            }], nzAddOnAfterIcon: [{\n                type: Input\n            }], nzPrefixIcon: [{\n                type: Input\n            }], nzSuffixIcon: [{\n                type: Input\n            }], nzAddOnBefore: [{\n                type: Input\n            }], nzAddOnAfter: [{\n                type: Input\n            }], nzPrefix: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzSearch: [{\n                type: Input\n            }], nzCompact: [{\n                type: Input\n            }] } });\n\nclass NzAutosizeDirective {\n    constructor(elementRef, ngZone, platform, resizeService) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.resizeService = resizeService;\n        this.autosize = false;\n        this.el = this.elementRef.nativeElement;\n        this.maxHeight = null;\n        this.minHeight = null;\n        this.destroy$ = new Subject();\n        this.inputGap = 10;\n    }\n    set nzAutosize(value) {\n        const isAutoSizeType = (data) => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n        if (typeof value === 'string' || value === true) {\n            this.autosize = true;\n        }\n        else if (isAutoSizeType(value)) {\n            this.autosize = true;\n            this.minRows = value.minRows;\n            this.maxRows = value.maxRows;\n            this.maxHeight = this.setMaxHeight();\n            this.minHeight = this.setMinHeight();\n        }\n    }\n    resizeToFitContent(force = false) {\n        this.cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this.cachedLineHeight) {\n            return;\n        }\n        const textarea = this.el;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('nz-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\n            this.inputGap;\n        if (this.maxHeight !== null && height > this.maxHeight) {\n            height = this.maxHeight;\n        }\n        if (this.minHeight !== null && height < this.minHeight) {\n            height = this.minHeight;\n        }\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('nz-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n        // We need to re-set the selection in order for it to scroll to the proper position.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n                const { selectionStart, selectionEnd } = textarea;\n                // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n                // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n                // between the time we requested the animation frame and when it was executed.\n                // Also note that we have to assert that the textarea is focused before we set the\n                // selection range. Setting the selection range on a non-focused textarea will cause\n                // it to receive focus on IE and Edge.\n                if (!this.destroy$.isStopped && document.activeElement === textarea) {\n                    textarea.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }));\n        }\n        this.previousValue = value;\n        this.previousMinRows = this.minRows;\n    }\n    cacheTextareaLineHeight() {\n        if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        const textareaClone = this.el.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this.el.parentNode.appendChild(textareaClone);\n        this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n        this.el.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this.maxHeight = this.setMaxHeight();\n        this.minHeight = this.setMinHeight();\n    }\n    setMinHeight() {\n        const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n        if (minHeight !== null) {\n            this.el.style.minHeight = `${minHeight}px`;\n        }\n        return minHeight;\n    }\n    setMaxHeight() {\n        const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n        if (maxHeight !== null) {\n            this.el.style.maxHeight = `${maxHeight}px`;\n        }\n        return maxHeight;\n    }\n    noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    ngAfterViewInit() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n            this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.resizeToFitContent(true));\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    ngDoCheck() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n}\nNzAutosizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzAutosizeDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$2.Platform }, { token: i2$2.NzResizeService }], target: i0.ɵɵFactoryTarget.Directive });\nNzAutosizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: { nzAutosize: \"nzAutosize\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"noopInputHandler()\" } }, exportAs: [\"nzAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzAutosizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[nzAutosize]',\n                    exportAs: 'nzAutosize',\n                    host: {\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        rows: '1',\n                        '(input)': 'noopInputHandler()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$2.Platform }, { type: i2$2.NzResizeService }]; }, propDecorators: { nzAutosize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextareaCountComponent {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nzMaxCharacterCount = 0;\n        this.nzComputeCharacterCount = v => v.length;\n        this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n        this.configChange$ = new Subject();\n        this.destroy$ = new Subject();\n    }\n    ngAfterContentInit() {\n        if (!this.nzInputDirective && isDevMode()) {\n            throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n        }\n        if (this.nzInputDirective.ngControl) {\n            const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n            merge(valueChanges, this.configChange$)\n                .pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value))\n                .subscribe(value => {\n                this.setDataCount(value);\n            });\n        }\n    }\n    setDataCount(value) {\n        const inputValue = isNotNil(value) ? String(value) : '';\n        const currentCount = this.nzComputeCharacterCount(inputValue);\n        const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n    }\n    ngOnDestroy() {\n        this.configChange$.complete();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTextareaCountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzTextareaCountComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzTextareaCountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzTextareaCountComponent, selector: \"nz-textarea-count\", inputs: { nzMaxCharacterCount: \"nzMaxCharacterCount\", nzComputeCharacterCount: \"nzComputeCharacterCount\", nzFormatter: \"nzFormatter\" }, host: { classAttribute: \"ant-input-textarea-show-count\" }, queries: [{ propertyName: \"nzInputDirective\", first: true, predicate: NzInputDirective, descendants: true, static: true }], ngImport: i0, template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzTextareaCountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-textarea-count',\n                    template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n                    host: {\n                        class: 'ant-input-textarea-show-count'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzInputDirective: [{\n                type: ContentChild,\n                args: [NzInputDirective, { static: true }]\n            }], nzMaxCharacterCount: [{\n                type: Input\n            }], nzComputeCharacterCount: [{\n                type: Input\n            }], nzFormatter: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputModule {\n}\nNzInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputModule, declarations: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupSlotComponent,\n        NzInputGroupWhitSuffixOrPrefixDirective], imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule], exports: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupWhitSuffixOrPrefixDirective] });\nNzInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputModule, imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupSlotComponent,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    exports: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}