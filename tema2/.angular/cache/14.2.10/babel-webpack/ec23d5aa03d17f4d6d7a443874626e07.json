{"ast":null,"code":"import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nclass NzWaveRenderer {\n  constructor(triggerElement, ngZone, insertExtraNode, platformId) {\n    this.triggerElement = triggerElement;\n    this.ngZone = ngZone;\n    this.insertExtraNode = insertExtraNode;\n    this.platformId = platformId;\n    this.waveTransitionDuration = 400;\n    this.styleForPseudo = null;\n    this.extraNode = null;\n    this.lastTime = 0;\n\n    this.onClick = event => {\n      if (!this.triggerElement || !this.triggerElement.getAttribute || this.triggerElement.getAttribute('disabled') || event.target.tagName === 'INPUT' || this.triggerElement.className.indexOf('disabled') >= 0) {\n        return;\n      }\n\n      this.fadeOutWave();\n    };\n\n    this.platform = new Platform(this.platformId);\n    this.clickHandler = this.onClick.bind(this);\n    this.bindTriggerEvent();\n  }\n\n  get waveAttributeName() {\n    return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n  }\n\n  bindTriggerEvent() {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.removeTriggerEvent();\n\n        if (this.triggerElement) {\n          this.triggerElement.addEventListener('click', this.clickHandler, true);\n        }\n      });\n    }\n  }\n\n  removeTriggerEvent() {\n    if (this.triggerElement) {\n      this.triggerElement.removeEventListener('click', this.clickHandler, true);\n    }\n  }\n\n  removeStyleAndExtraNode() {\n    if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n      document.body.removeChild(this.styleForPseudo);\n      this.styleForPseudo = null;\n    }\n\n    if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n      this.triggerElement.removeChild(this.extraNode);\n    }\n  }\n\n  destroy() {\n    this.removeTriggerEvent();\n    this.removeStyleAndExtraNode();\n  }\n\n  fadeOutWave() {\n    const node = this.triggerElement;\n    const waveColor = this.getWaveColor(node);\n    node.setAttribute(this.waveAttributeName, 'true');\n\n    if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n      return;\n    }\n\n    if (this.isValidColor(waveColor)) {\n      if (!this.styleForPseudo) {\n        this.styleForPseudo = document.createElement('style');\n      }\n\n      this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n      document.body.appendChild(this.styleForPseudo);\n    }\n\n    if (this.insertExtraNode) {\n      if (!this.extraNode) {\n        this.extraNode = document.createElement('div');\n      }\n\n      this.extraNode.className = 'ant-click-animating-node';\n      node.appendChild(this.extraNode);\n    }\n\n    this.lastTime = Date.now();\n    this.runTimeoutOutsideZone(() => {\n      node.removeAttribute(this.waveAttributeName);\n      this.removeStyleAndExtraNode();\n    }, this.waveTransitionDuration);\n  }\n\n  isValidColor(color) {\n    return !!color && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && this.isNotGrey(color) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) && color !== 'transparent';\n  }\n\n  isNotGrey(color) {\n    const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n\n    if (match && match[1] && match[2] && match[3]) {\n      return !(match[1] === match[2] && match[2] === match[3]);\n    }\n\n    return true;\n  }\n\n  getWaveColor(node) {\n    const nodeStyle = getComputedStyle(node);\n    return nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n    nodeStyle.getPropertyValue('border-color') || nodeStyle.getPropertyValue('background-color');\n  }\n\n  runTimeoutOutsideZone(fn, delay) {\n    this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n  disabled: false\n};\nconst NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n  providedIn: 'root',\n  factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\n\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n  return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\n\nclass NzWaveDirective {\n  constructor(ngZone, elementRef, config, animationType, platformId) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.config = config;\n    this.animationType = animationType;\n    this.platformId = platformId;\n    this.nzWaveExtraNode = false;\n    this.waveDisabled = false;\n    this.waveDisabled = this.isConfigDisabled();\n  }\n\n  get disabled() {\n    return this.waveDisabled;\n  }\n\n  get rendererRef() {\n    return this.waveRenderer;\n  }\n\n  isConfigDisabled() {\n    let disabled = false;\n\n    if (this.config && typeof this.config.disabled === 'boolean') {\n      disabled = this.config.disabled;\n    }\n\n    if (this.animationType === 'NoopAnimations') {\n      disabled = true;\n    }\n\n    return disabled;\n  }\n\n  ngOnDestroy() {\n    if (this.waveRenderer) {\n      this.waveRenderer.destroy();\n    }\n  }\n\n  ngOnInit() {\n    this.renderWaveIfEnabled();\n  }\n\n  renderWaveIfEnabled() {\n    if (!this.waveDisabled && this.elementRef.nativeElement) {\n      this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n    }\n  }\n\n  disable() {\n    this.waveDisabled = true;\n\n    if (this.waveRenderer) {\n      this.waveRenderer.removeTriggerEvent();\n      this.waveRenderer.removeStyleAndExtraNode();\n    }\n  }\n\n  enable() {\n    // config priority\n    this.waveDisabled = this.isConfigDisabled() || false;\n\n    if (this.waveRenderer) {\n      this.waveRenderer.bindTriggerEvent();\n    }\n  }\n\n}\n\nNzWaveDirective.ɵfac = function NzWaveDirective_Factory(t) {\n  return new (t || NzWaveDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nNzWaveDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzWaveDirective,\n  selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]],\n  inputs: {\n    nzWaveExtraNode: \"nzWaveExtraNode\"\n  },\n  exportAs: [\"nzWave\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzWaveDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n      exportAs: 'nzWave'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_WAVE_GLOBAL_CONFIG]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    nzWaveExtraNode: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzWaveModule {}\n\nNzWaveModule.ɵfac = function NzWaveModule_Factory(t) {\n  return new (t || NzWaveModule)();\n};\n\nNzWaveModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzWaveModule\n});\nNzWaveModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [PlatformModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzWaveModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      exports: [NzWaveDirective],\n      declarations: [NzWaveDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer };","map":{"version":3,"names":["Platform","PlatformModule","i0","InjectionToken","PLATFORM_ID","Directive","Optional","Inject","Input","NgModule","ANIMATION_MODULE_TYPE","NzWaveRenderer","constructor","triggerElement","ngZone","insertExtraNode","platformId","waveTransitionDuration","styleForPseudo","extraNode","lastTime","onClick","event","getAttribute","target","tagName","className","indexOf","fadeOutWave","platform","clickHandler","bind","bindTriggerEvent","waveAttributeName","isBrowser","runOutsideAngular","removeTriggerEvent","addEventListener","removeEventListener","removeStyleAndExtraNode","document","body","contains","removeChild","destroy","node","waveColor","getWaveColor","setAttribute","Date","now","isValidColor","createElement","innerHTML","appendChild","runTimeoutOutsideZone","removeAttribute","color","isNotGrey","test","match","nodeStyle","getComputedStyle","getPropertyValue","fn","delay","setTimeout","NZ_WAVE_GLOBAL_DEFAULT_CONFIG","disabled","NZ_WAVE_GLOBAL_CONFIG","providedIn","factory","NZ_WAVE_GLOBAL_CONFIG_FACTORY","NzWaveDirective","elementRef","config","animationType","nzWaveExtraNode","waveDisabled","isConfigDisabled","rendererRef","waveRenderer","ngOnDestroy","ngOnInit","renderWaveIfEnabled","nativeElement","disable","enable","ɵfac","NgZone","ElementRef","ɵdir","type","args","selector","exportAs","undefined","decorators","NzWaveModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Administrator/Facultate/CST/teme/tema2/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-core-wave.mjs"],"sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzWaveRenderer {\n    constructor(triggerElement, ngZone, insertExtraNode, platformId) {\n        this.triggerElement = triggerElement;\n        this.ngZone = ngZone;\n        this.insertExtraNode = insertExtraNode;\n        this.platformId = platformId;\n        this.waveTransitionDuration = 400;\n        this.styleForPseudo = null;\n        this.extraNode = null;\n        this.lastTime = 0;\n        this.onClick = (event) => {\n            if (!this.triggerElement ||\n                !this.triggerElement.getAttribute ||\n                this.triggerElement.getAttribute('disabled') ||\n                event.target.tagName === 'INPUT' ||\n                this.triggerElement.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            this.fadeOutWave();\n        };\n        this.platform = new Platform(this.platformId);\n        this.clickHandler = this.onClick.bind(this);\n        this.bindTriggerEvent();\n    }\n    get waveAttributeName() {\n        return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    bindTriggerEvent() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                this.removeTriggerEvent();\n                if (this.triggerElement) {\n                    this.triggerElement.addEventListener('click', this.clickHandler, true);\n                }\n            });\n        }\n    }\n    removeTriggerEvent() {\n        if (this.triggerElement) {\n            this.triggerElement.removeEventListener('click', this.clickHandler, true);\n        }\n    }\n    removeStyleAndExtraNode() {\n        if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n            document.body.removeChild(this.styleForPseudo);\n            this.styleForPseudo = null;\n        }\n        if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n            this.triggerElement.removeChild(this.extraNode);\n        }\n    }\n    destroy() {\n        this.removeTriggerEvent();\n        this.removeStyleAndExtraNode();\n    }\n    fadeOutWave() {\n        const node = this.triggerElement;\n        const waveColor = this.getWaveColor(node);\n        node.setAttribute(this.waveAttributeName, 'true');\n        if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n            return;\n        }\n        if (this.isValidColor(waveColor)) {\n            if (!this.styleForPseudo) {\n                this.styleForPseudo = document.createElement('style');\n            }\n            this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n            document.body.appendChild(this.styleForPseudo);\n        }\n        if (this.insertExtraNode) {\n            if (!this.extraNode) {\n                this.extraNode = document.createElement('div');\n            }\n            this.extraNode.className = 'ant-click-animating-node';\n            node.appendChild(this.extraNode);\n        }\n        this.lastTime = Date.now();\n        this.runTimeoutOutsideZone(() => {\n            node.removeAttribute(this.waveAttributeName);\n            this.removeStyleAndExtraNode();\n        }, this.waveTransitionDuration);\n    }\n    isValidColor(color) {\n        return (!!color &&\n            color !== '#ffffff' &&\n            color !== 'rgb(255, 255, 255)' &&\n            this.isNotGrey(color) &&\n            !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) &&\n            color !== 'transparent');\n    }\n    isNotGrey(color) {\n        const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n        if (match && match[1] && match[2] && match[3]) {\n            return !(match[1] === match[2] && match[2] === match[3]);\n        }\n        return true;\n    }\n    getWaveColor(node) {\n        const nodeStyle = getComputedStyle(node);\n        return (nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n            nodeStyle.getPropertyValue('border-color') ||\n            nodeStyle.getPropertyValue('background-color'));\n    }\n    runTimeoutOutsideZone(fn, delay) {\n        this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n    disabled: false\n};\nconst NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n    providedIn: 'root',\n    factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n    return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\nclass NzWaveDirective {\n    constructor(ngZone, elementRef, config, animationType, platformId) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.config = config;\n        this.animationType = animationType;\n        this.platformId = platformId;\n        this.nzWaveExtraNode = false;\n        this.waveDisabled = false;\n        this.waveDisabled = this.isConfigDisabled();\n    }\n    get disabled() {\n        return this.waveDisabled;\n    }\n    get rendererRef() {\n        return this.waveRenderer;\n    }\n    isConfigDisabled() {\n        let disabled = false;\n        if (this.config && typeof this.config.disabled === 'boolean') {\n            disabled = this.config.disabled;\n        }\n        if (this.animationType === 'NoopAnimations') {\n            disabled = true;\n        }\n        return disabled;\n    }\n    ngOnDestroy() {\n        if (this.waveRenderer) {\n            this.waveRenderer.destroy();\n        }\n    }\n    ngOnInit() {\n        this.renderWaveIfEnabled();\n    }\n    renderWaveIfEnabled() {\n        if (!this.waveDisabled && this.elementRef.nativeElement) {\n            this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n        }\n    }\n    disable() {\n        this.waveDisabled = true;\n        if (this.waveRenderer) {\n            this.waveRenderer.removeTriggerEvent();\n            this.waveRenderer.removeStyleAndExtraNode();\n        }\n    }\n    enable() {\n        // config priority\n        this.waveDisabled = this.isConfigDisabled() || false;\n        if (this.waveRenderer) {\n            this.waveRenderer.bindTriggerEvent();\n        }\n    }\n}\nNzWaveDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: NZ_WAVE_GLOBAL_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nNzWaveDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzWaveDirective, selector: \"[nz-wave],button[nz-button]:not([nzType=\\\"link\\\"]):not([nzType=\\\"text\\\"])\", inputs: { nzWaveExtraNode: \"nzWaveExtraNode\" }, exportAs: [\"nzWave\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n                    exportAs: 'nzWave'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NZ_WAVE_GLOBAL_CONFIG]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { nzWaveExtraNode: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzWaveModule {\n}\nNzWaveModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzWaveModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveModule, declarations: [NzWaveDirective], imports: [PlatformModule], exports: [NzWaveDirective] });\nNzWaveModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveModule, imports: [PlatformModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzWaveModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [PlatformModule],\n                    exports: [NzWaveDirective],\n                    declarations: [NzWaveDirective]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}