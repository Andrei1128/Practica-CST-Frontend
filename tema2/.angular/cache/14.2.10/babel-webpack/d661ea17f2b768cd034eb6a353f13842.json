{"ast":null,"code":"import { rgbToHsv, rgbToHex, inputToRGB } from '@ctrl/tinycolor';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst statusColors = ['success', 'processing', 'error', 'default', 'warning'];\nconst presetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n\nfunction isPresetColor(color) {\n  return presetColors.indexOf(color) !== -1;\n}\n\nfunction isStatusColor(color) {\n  return statusColors.indexOf(color) !== -1;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst hueStep = 2; // 色相阶梯\n\nconst saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nconst saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nconst brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nconst brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nconst lightColorCount = 5; // 浅色数量，主色上\n\nconst darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nconst darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}]; // Wrapper function ported from TinyColor.prototype.toHsv\n// Keep it here because of `hsv.h * 360`\n\nfunction toHsv({\n  r,\n  g,\n  b\n}) {\n  const hsv = rgbToHsv(r, g, b);\n  return {\n    h: hsv.h * 360,\n    s: hsv.s,\n    v: hsv.v\n  };\n} // Wrapper function ported from TinyColor.prototype.toHexString\n// Keep it here because of the prefix `#`\n\n\nfunction toHex({\n  r,\n  g,\n  b\n}) {\n  return `#${rgbToHex(r, g, b, false)}`;\n} // Wrapper function ported from TinyColor.prototype.mix, not treeshakable.\n// Amount in range [0, 1]\n// Assume color1 & color2 has no alpha, since the following src code did so.\n\n\nfunction mix(rgb1, rgb2, amount) {\n  const p = amount / 100;\n  const rgb = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b\n  };\n  return rgb;\n}\n\nfunction getHue(hsv, i, light) {\n  let hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  let saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  let value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color, opts = {}) {\n  const patterns = [];\n  const pColor = inputToRGB(color);\n\n  for (let i = lightColorCount; i > 0; i -= 1) {\n    const hsv = toHsv(pColor);\n    const colorString = toHex(inputToRGB({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }));\n    patterns.push(colorString);\n  }\n\n  patterns.push(toHex(pColor));\n\n  for (let i = 1; i <= darkColorCount; i += 1) {\n    const hsv = toHsv(pColor);\n    const colorString = toHex(inputToRGB({\n      h: getHue(hsv, i),\n      s: getSaturation(hsv, i),\n      v: getValue(hsv, i)\n    }));\n    patterns.push(colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(({\n      index,\n      opacity\n    }) => {\n      const darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || '#141414'), inputToRGB(patterns[index]), opacity * 100));\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { generate, isPresetColor, isStatusColor, presetColors, statusColors };","map":{"version":3,"names":["rgbToHsv","rgbToHex","inputToRGB","statusColors","presetColors","isPresetColor","color","indexOf","isStatusColor","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","toHsv","r","g","b","hsv","h","s","v","toHex","mix","rgb1","rgb2","amount","p","rgb","getHue","i","light","hue","Math","round","getSaturation","saturation","Number","toFixed","getValue","value","generate","opts","patterns","pColor","colorString","push","theme","map","darkColorString","backgroundColor"],"sources":["C:/Users/Administrator/Facultate/CST/teme/tema2/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-core-color.mjs"],"sourcesContent":["import { rgbToHsv, rgbToHex, inputToRGB } from '@ctrl/tinycolor';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst statusColors = ['success', 'processing', 'error', 'default', 'warning'];\nconst presetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\nfunction isPresetColor(color) {\n    return presetColors.indexOf(color) !== -1;\n}\nfunction isStatusColor(color) {\n    return statusColors.indexOf(color) !== -1;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst hueStep = 2; // 色相阶梯\nconst saturationStep = 0.16; // 饱和度阶梯，浅色部分\nconst saturationStep2 = 0.05; // 饱和度阶梯，深色部分\nconst brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\nconst brightnessStep2 = 0.15; // 亮度阶梯，深色部分\nconst lightColorCount = 5; // 浅色数量，主色上\nconst darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\nconst darkColorMap = [\n    { index: 7, opacity: 0.15 },\n    { index: 6, opacity: 0.25 },\n    { index: 5, opacity: 0.3 },\n    { index: 5, opacity: 0.45 },\n    { index: 5, opacity: 0.65 },\n    { index: 5, opacity: 0.85 },\n    { index: 4, opacity: 0.9 },\n    { index: 3, opacity: 0.95 },\n    { index: 2, opacity: 0.97 },\n    { index: 1, opacity: 0.98 }\n];\n// Wrapper function ported from TinyColor.prototype.toHsv\n// Keep it here because of `hsv.h * 360`\nfunction toHsv({ r, g, b }) {\n    const hsv = rgbToHsv(r, g, b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v };\n}\n// Wrapper function ported from TinyColor.prototype.toHexString\n// Keep it here because of the prefix `#`\nfunction toHex({ r, g, b }) {\n    return `#${rgbToHex(r, g, b, false)}`;\n}\n// Wrapper function ported from TinyColor.prototype.mix, not treeshakable.\n// Amount in range [0, 1]\n// Assume color1 & color2 has no alpha, since the following src code did so.\nfunction mix(rgb1, rgb2, amount) {\n    const p = amount / 100;\n    const rgb = {\n        r: (rgb2.r - rgb1.r) * p + rgb1.r,\n        g: (rgb2.g - rgb1.g) * p + rgb1.g,\n        b: (rgb2.b - rgb1.b) * p + rgb1.b\n    };\n    return rgb;\n}\nfunction getHue(hsv, i, light) {\n    let hue;\n    // 根据色相不同，色相转向不同\n    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n    }\n    else {\n        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    }\n    else if (hue >= 360) {\n        hue -= 360;\n    }\n    return hue;\n}\nfunction getSaturation(hsv, i, light) {\n    // grey color don't change saturation\n    if (hsv.h === 0 && hsv.s === 0) {\n        return hsv.s;\n    }\n    let saturation;\n    if (light) {\n        saturation = hsv.s - saturationStep * i;\n    }\n    else if (i === darkColorCount) {\n        saturation = hsv.s + saturationStep;\n    }\n    else {\n        saturation = hsv.s + saturationStep2 * i;\n    }\n    // 边界值修正\n    if (saturation > 1) {\n        saturation = 1;\n    }\n    // 第一格的 s 限制在 0.06-0.1 之间\n    if (light && i === lightColorCount && saturation > 0.1) {\n        saturation = 0.1;\n    }\n    if (saturation < 0.06) {\n        saturation = 0.06;\n    }\n    return Number(saturation.toFixed(2));\n}\nfunction getValue(hsv, i, light) {\n    let value;\n    if (light) {\n        value = hsv.v + brightnessStep1 * i;\n    }\n    else {\n        value = hsv.v - brightnessStep2 * i;\n    }\n    if (value > 1) {\n        value = 1;\n    }\n    return Number(value.toFixed(2));\n}\nfunction generate(color, opts = {}) {\n    const patterns = [];\n    const pColor = inputToRGB(color);\n    for (let i = lightColorCount; i > 0; i -= 1) {\n        const hsv = toHsv(pColor);\n        const colorString = toHex(inputToRGB({\n            h: getHue(hsv, i, true),\n            s: getSaturation(hsv, i, true),\n            v: getValue(hsv, i, true)\n        }));\n        patterns.push(colorString);\n    }\n    patterns.push(toHex(pColor));\n    for (let i = 1; i <= darkColorCount; i += 1) {\n        const hsv = toHsv(pColor);\n        const colorString = toHex(inputToRGB({\n            h: getHue(hsv, i),\n            s: getSaturation(hsv, i),\n            v: getValue(hsv, i)\n        }));\n        patterns.push(colorString);\n    }\n    // dark theme patterns\n    if (opts.theme === 'dark') {\n        return darkColorMap.map(({ index, opacity }) => {\n            const darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || '#141414'), inputToRGB(patterns[index]), opacity * 100));\n            return darkColorString;\n        });\n    }\n    return patterns;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { generate, isPresetColor, isStatusColor, presetColors, statusColors };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}