{"ast":null,"code":"import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Self, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, from } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport * as i4 from '@angular/common/http';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst NZ_ICONS_USED_BY_ZORRO = [BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, StarFill, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline];\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n\nclass NzIconService extends IconService {\n  constructor(rendererFactory, sanitizer, nzConfigService, platform, handler, _document, icons) {\n    super(rendererFactory, handler, _document, sanitizer, [...NZ_ICONS_USED_BY_ZORRO, ...(icons || [])]);\n    this.nzConfigService = nzConfigService;\n    this.platform = platform;\n    this.configUpdated$ = new Subject();\n    this.iconfontCache = new Set();\n    this.subscription = null;\n    this.onConfigChange();\n    this.configDefaultTwotoneColor();\n    this.configDefaultTheme();\n  }\n\n  get _disableDynamicLoading() {\n    return !this.platform.isBrowser;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n  normalizeSvgElement(svg) {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n\n  fetchFromIconfont(opt) {\n    const {\n      scriptUrl\n    } = opt;\n\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n\n      this._renderer.appendChild(this._document.body, script);\n\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n\n  createIconfontIcon(type) {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n\n  onConfigChange() {\n    this.subscription = this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n\n  configDefaultTheme() {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n\n  configDefaultTwotoneColor() {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n\n    this.twoToneColor = {\n      primaryColor\n    };\n  }\n\n  getConfig() {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n\n}\n\nNzIconService.ɵfac = function NzIconService_Factory(t) {\n  return new (t || NzIconService)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.DomSanitizer), i0.ɵɵinject(i2.NzConfigService), i0.ɵɵinject(i3.Platform), i0.ɵɵinject(i4.HttpBackend, 8), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(NZ_ICONS, 8));\n};\n\nNzIconService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzIconService,\n  factory: NzIconService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.RendererFactory2\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: i2.NzConfigService\n    }, {\n      type: i3.Platform\n    }, {\n      type: i4.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_ICONS]\n      }]\n    }];\n  }, null);\n})();\n\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\n\nclass NzIconPatchService {\n  constructor(extraIcons, rootIconService) {\n    this.extraIcons = extraIcons;\n    this.rootIconService = rootIconService;\n    this.patched = false;\n  }\n\n  doPatch() {\n    if (this.patched) {\n      return;\n    }\n\n    this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n    this.patched = true;\n  }\n\n}\n\nNzIconPatchService.ɵfac = function NzIconPatchService_Factory(t) {\n  return new (t || NzIconPatchService)(i0.ɵɵinject(NZ_ICONS_PATCH, 2), i0.ɵɵinject(NzIconService));\n};\n\nNzIconPatchService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzIconPatchService,\n  factory: NzIconPatchService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconPatchService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [NZ_ICONS_PATCH]\n      }]\n    }, {\n      type: NzIconService\n    }];\n  }, null);\n})();\n\nclass NzIconDirective extends IconDirective {\n  constructor(ngZone, changeDetectorRef, elementRef, iconService, renderer, iconPatch) {\n    super(iconService, elementRef, renderer);\n    this.ngZone = ngZone;\n    this.changeDetectorRef = changeDetectorRef;\n    this.iconService = iconService;\n    this.renderer = renderer;\n    this.cacheClassName = null;\n    this.nzRotate = 0;\n    this.spin = false;\n    this.destroy$ = new Subject();\n\n    if (iconPatch) {\n      iconPatch.doPatch();\n    }\n\n    this.el = elementRef.nativeElement;\n  }\n\n  set nzSpin(value) {\n    this.spin = value;\n  }\n\n  set nzType(value) {\n    this.type = value;\n  }\n\n  set nzTheme(value) {\n    this.theme = value;\n  }\n\n  set nzTwotoneColor(value) {\n    this.twoToneColor = value;\n  }\n\n  set nzIconfont(value) {\n    this.iconfont = value;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzType,\n      nzTwotoneColor,\n      nzSpin,\n      nzTheme,\n      nzRotate\n    } = changes;\n\n    if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n  }\n\n  ngOnInit() {\n    this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n  }\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n\n\n  ngAfterContentChecked() {\n    if (!this.type) {\n      const children = this.el.children;\n      let length = children.length;\n\n      if (!this.type && children.length) {\n        while (length--) {\n          const child = children[length];\n\n          if (child.tagName.toLowerCase() === 'svg') {\n            this.iconService.normalizeSvgElement(child);\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   */\n\n\n  changeIcon2() {\n    this.setClassName(); // We don't need to re-enter the Angular zone for adding classes or attributes through the renderer.\n\n    this.ngZone.runOutsideAngular(() => {\n      from(this._changeIcon()).pipe(takeUntil(this.destroy$)).subscribe({\n        next: svgOrRemove => {\n          // The _changeIcon method would call Renderer to remove the element of the old icon,\n          // which would call `markElementAsRemoved` eventually,\n          // so we should call `detectChanges` to tell Angular remove the DOM node.\n          // #7186\n          this.changeDetectorRef.detectChanges();\n\n          if (svgOrRemove) {\n            this.setSVGData(svgOrRemove);\n            this.handleSpin(svgOrRemove);\n            this.handleRotate(svgOrRemove);\n          }\n        },\n        error: warn\n      });\n    });\n  }\n\n  handleSpin(svg) {\n    if (this.spin || this.type === 'loading') {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n\n  handleRotate(svg) {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n\n  setClassName() {\n    if (this.cacheClassName) {\n      this.renderer.removeClass(this.el, this.cacheClassName);\n    }\n\n    this.cacheClassName = `anticon-${this.type}`;\n    this.renderer.addClass(this.el, this.cacheClassName);\n  }\n\n  setSVGData(svg) {\n    this.renderer.setAttribute(svg, 'data-icon', this.type);\n    this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n  }\n\n}\n\nNzIconDirective.ɵfac = function NzIconDirective_Factory(t) {\n  return new (t || NzIconDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzIconService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzIconPatchService, 8));\n};\n\nNzIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzIconDirective,\n  selectors: [[\"\", \"nz-icon\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzIconDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"anticon\", true);\n    }\n  },\n  inputs: {\n    nzSpin: \"nzSpin\",\n    nzRotate: \"nzRotate\",\n    nzType: \"nzType\",\n    nzTheme: \"nzTheme\",\n    nzTwotoneColor: \"nzTwotoneColor\",\n    nzIconfont: \"nzIconfont\"\n  },\n  exportAs: [\"nzIcon\"],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzIconDirective.prototype, \"nzSpin\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-icon]',\n      exportAs: 'nzIcon',\n      host: {\n        '[class.anticon]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NzIconService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NzIconPatchService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzSpin: [{\n      type: Input\n    }],\n    nzRotate: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzTheme: [{\n      type: Input\n    }],\n    nzTwotoneColor: [{\n      type: Input\n    }],\n    nzIconfont: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzIconModule {\n  static forRoot(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [{\n        provide: NZ_ICONS,\n        useValue: icons\n      }]\n    };\n  }\n\n  static forChild(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [NzIconPatchService, {\n        provide: NZ_ICONS_PATCH,\n        useValue: icons\n      }]\n    };\n  }\n\n}\n\nNzIconModule.ɵfac = function NzIconModule_Factory(t) {\n  return new (t || NzIconModule)();\n};\n\nNzIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzIconModule\n});\nNzIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [PlatformModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzIconDirective],\n      declarations: [NzIconDirective],\n      imports: [PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };","map":{"version":3,"names":["i3","PlatformModule","i0","InjectionToken","Injectable","Optional","Inject","Self","Directive","Input","NgModule","__decorate","Subject","from","takeUntil","IconService","IconDirective","warn","InputBoolean","DOCUMENT","BarsOutline","CalendarOutline","CaretUpFill","CaretUpOutline","CaretDownFill","CaretDownOutline","CheckCircleFill","CheckCircleOutline","CheckOutline","ClockCircleOutline","CloseCircleOutline","CloseCircleFill","CloseOutline","CopyOutline","DeleteOutline","DoubleLeftOutline","DoubleRightOutline","DownOutline","EditOutline","EllipsisOutline","ExclamationCircleFill","ExclamationCircleOutline","EyeOutline","FileFill","FileOutline","FilterFill","InfoCircleFill","InfoCircleOutline","LeftOutline","LoadingOutline","PaperClipOutline","QuestionCircleOutline","RightOutline","RotateRightOutline","RotateLeftOutline","StarFill","SearchOutline","UploadOutline","VerticalAlignTopOutline","UpOutline","SwapRightOutline","ZoomInOutline","ZoomOutOutline","i1","i2","i4","NZ_ICONS_USED_BY_ZORRO","NZ_ICONS","NZ_ICON_DEFAULT_TWOTONE_COLOR","DEFAULT_TWOTONE_COLOR","NzIconService","constructor","rendererFactory","sanitizer","nzConfigService","platform","handler","_document","icons","configUpdated$","iconfontCache","Set","subscription","onConfigChange","configDefaultTwotoneColor","configDefaultTheme","_disableDynamicLoading","isBrowser","ngOnDestroy","unsubscribe","normalizeSvgElement","svg","getAttribute","_renderer","setAttribute","fetchFromIconfont","opt","scriptUrl","has","script","createElement","replace","appendChild","body","add","createIconfontIcon","type","_createSVGElementFromString","getConfigChangeEventForComponent","subscribe","next","iconConfig","getConfig","defaultTheme","nzTheme","defaultTwotoneColor","nzTwotoneColor","primaryColor","startsWith","twoToneColor","getConfigForComponent","ɵfac","RendererFactory2","DomSanitizer","NzConfigService","Platform","HttpBackend","ɵprov","args","providedIn","decorators","undefined","NZ_ICONS_PATCH","NzIconPatchService","extraIcons","rootIconService","patched","doPatch","forEach","iconDefinition","addIcon","NzIconDirective","ngZone","changeDetectorRef","elementRef","iconService","renderer","iconPatch","cacheClassName","nzRotate","spin","destroy$","el","nativeElement","nzSpin","value","nzType","theme","nzIconfont","iconfont","ngOnChanges","changes","changeIcon2","handleRotate","firstChild","_setSVGElement","ngOnInit","className","trim","ngAfterContentChecked","children","length","child","tagName","toLowerCase","setClassName","runOutsideAngular","_changeIcon","pipe","svgOrRemove","detectChanges","setSVGData","handleSpin","error","addClass","removeClass","removeAttribute","NgZone","ChangeDetectorRef","ElementRef","Renderer2","ɵdir","prototype","selector","exportAs","host","NzIconModule","forRoot","ngModule","providers","provide","useValue","forChild","ɵmod","ɵinj","exports","declarations","imports"],"sources":["C:/Users/Administrator/Facultate/CST/teme/tema4/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-icon.mjs"],"sourcesContent":["import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Self, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, from } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport * as i4 from '@angular/common/http';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS_USED_BY_ZORRO = [\n    BarsOutline,\n    CalendarOutline,\n    CaretUpFill,\n    CaretUpOutline,\n    CaretDownFill,\n    CaretDownOutline,\n    CheckCircleFill,\n    CheckCircleOutline,\n    CheckOutline,\n    ClockCircleOutline,\n    CloseCircleOutline,\n    CloseCircleFill,\n    CloseOutline,\n    CopyOutline,\n    DeleteOutline,\n    DoubleLeftOutline,\n    DoubleRightOutline,\n    DownOutline,\n    EditOutline,\n    EllipsisOutline,\n    ExclamationCircleFill,\n    ExclamationCircleOutline,\n    EyeOutline,\n    FileFill,\n    FileOutline,\n    FilterFill,\n    InfoCircleFill,\n    InfoCircleOutline,\n    LeftOutline,\n    LoadingOutline,\n    PaperClipOutline,\n    QuestionCircleOutline,\n    RightOutline,\n    RotateRightOutline,\n    RotateLeftOutline,\n    StarFill,\n    SearchOutline,\n    StarFill,\n    UploadOutline,\n    VerticalAlignTopOutline,\n    UpOutline,\n    SwapRightOutline,\n    ZoomInOutline,\n    ZoomOutOutline\n];\n\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nclass NzIconService extends IconService {\n    constructor(rendererFactory, sanitizer, nzConfigService, platform, handler, _document, icons) {\n        super(rendererFactory, handler, _document, sanitizer, [...NZ_ICONS_USED_BY_ZORRO, ...(icons || [])]);\n        this.nzConfigService = nzConfigService;\n        this.platform = platform;\n        this.configUpdated$ = new Subject();\n        this.iconfontCache = new Set();\n        this.subscription = null;\n        this.onConfigChange();\n        this.configDefaultTwotoneColor();\n        this.configDefaultTheme();\n    }\n    get _disableDynamicLoading() {\n        return !this.platform.isBrowser;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    normalizeSvgElement(svg) {\n        if (!svg.getAttribute('viewBox')) {\n            this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n        }\n        if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n            this._renderer.setAttribute(svg, 'width', '1em');\n            this._renderer.setAttribute(svg, 'height', '1em');\n        }\n        if (!svg.getAttribute('fill')) {\n            this._renderer.setAttribute(svg, 'fill', 'currentColor');\n        }\n    }\n    fetchFromIconfont(opt) {\n        const { scriptUrl } = opt;\n        if (this._document && !this.iconfontCache.has(scriptUrl)) {\n            const script = this._renderer.createElement('script');\n            this._renderer.setAttribute(script, 'src', scriptUrl);\n            this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n            this._renderer.appendChild(this._document.body, script);\n            this.iconfontCache.add(scriptUrl);\n        }\n    }\n    createIconfontIcon(type) {\n        return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n    }\n    onConfigChange() {\n        this.subscription = this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n            this.configDefaultTwotoneColor();\n            this.configDefaultTheme();\n            this.configUpdated$.next();\n        });\n    }\n    configDefaultTheme() {\n        const iconConfig = this.getConfig();\n        this.defaultTheme = iconConfig.nzTheme || 'outline';\n    }\n    configDefaultTwotoneColor() {\n        const iconConfig = this.getConfig();\n        const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n        let primaryColor = DEFAULT_TWOTONE_COLOR;\n        if (defaultTwotoneColor) {\n            if (defaultTwotoneColor.startsWith('#')) {\n                primaryColor = defaultTwotoneColor;\n            }\n            else {\n                warn('Twotone color must be a hex color!');\n            }\n        }\n        this.twoToneColor = { primaryColor };\n    }\n    getConfig() {\n        return this.nzConfigService.getConfigForComponent('icon') || {};\n    }\n}\nNzIconService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconService, deps: [{ token: i0.RendererFactory2 }, { token: i1.DomSanitizer }, { token: i2.NzConfigService }, { token: i3.Platform }, { token: i4.HttpBackend, optional: true }, { token: DOCUMENT, optional: true }, { token: NZ_ICONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNzIconService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: i1.DomSanitizer }, { type: i2.NzConfigService }, { type: i3.Platform }, { type: i4.HttpBackend, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NZ_ICONS]\n                }] }]; } });\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\nclass NzIconPatchService {\n    constructor(extraIcons, rootIconService) {\n        this.extraIcons = extraIcons;\n        this.rootIconService = rootIconService;\n        this.patched = false;\n    }\n    doPatch() {\n        if (this.patched) {\n            return;\n        }\n        this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n        this.patched = true;\n    }\n}\nNzIconPatchService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconPatchService, deps: [{ token: NZ_ICONS_PATCH, self: true }, { token: NzIconService }], target: i0.ɵɵFactoryTarget.Injectable });\nNzIconPatchService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconPatchService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconPatchService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NZ_ICONS_PATCH]\n                }] }, { type: NzIconService }]; } });\n\nclass NzIconDirective extends IconDirective {\n    constructor(ngZone, changeDetectorRef, elementRef, iconService, renderer, iconPatch) {\n        super(iconService, elementRef, renderer);\n        this.ngZone = ngZone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.iconService = iconService;\n        this.renderer = renderer;\n        this.cacheClassName = null;\n        this.nzRotate = 0;\n        this.spin = false;\n        this.destroy$ = new Subject();\n        if (iconPatch) {\n            iconPatch.doPatch();\n        }\n        this.el = elementRef.nativeElement;\n    }\n    set nzSpin(value) {\n        this.spin = value;\n    }\n    set nzType(value) {\n        this.type = value;\n    }\n    set nzTheme(value) {\n        this.theme = value;\n    }\n    set nzTwotoneColor(value) {\n        this.twoToneColor = value;\n    }\n    set nzIconfont(value) {\n        this.iconfont = value;\n    }\n    ngOnChanges(changes) {\n        const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\n        if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n            this.changeIcon2();\n        }\n        else if (nzRotate) {\n            this.handleRotate(this.el.firstChild);\n        }\n        else {\n            this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n        }\n    }\n    ngOnInit() {\n        this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n    /**\n     * If custom content is provided, try to normalize SVG elements.\n     */\n    ngAfterContentChecked() {\n        if (!this.type) {\n            const children = this.el.children;\n            let length = children.length;\n            if (!this.type && children.length) {\n                while (length--) {\n                    const child = children[length];\n                    if (child.tagName.toLowerCase() === 'svg') {\n                        this.iconService.normalizeSvgElement(child);\n                    }\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n    /**\n     * Replacement of `changeIcon` for more modifications.\n     */\n    changeIcon2() {\n        this.setClassName();\n        // We don't need to re-enter the Angular zone for adding classes or attributes through the renderer.\n        this.ngZone.runOutsideAngular(() => {\n            from(this._changeIcon())\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                next: svgOrRemove => {\n                    // The _changeIcon method would call Renderer to remove the element of the old icon,\n                    // which would call `markElementAsRemoved` eventually,\n                    // so we should call `detectChanges` to tell Angular remove the DOM node.\n                    // #7186\n                    this.changeDetectorRef.detectChanges();\n                    if (svgOrRemove) {\n                        this.setSVGData(svgOrRemove);\n                        this.handleSpin(svgOrRemove);\n                        this.handleRotate(svgOrRemove);\n                    }\n                },\n                error: warn\n            });\n        });\n    }\n    handleSpin(svg) {\n        if (this.spin || this.type === 'loading') {\n            this.renderer.addClass(svg, 'anticon-spin');\n        }\n        else {\n            this.renderer.removeClass(svg, 'anticon-spin');\n        }\n    }\n    handleRotate(svg) {\n        if (this.nzRotate) {\n            this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n        }\n        else {\n            this.renderer.removeAttribute(svg, 'style');\n        }\n    }\n    setClassName() {\n        if (this.cacheClassName) {\n            this.renderer.removeClass(this.el, this.cacheClassName);\n        }\n        this.cacheClassName = `anticon-${this.type}`;\n        this.renderer.addClass(this.el, this.cacheClassName);\n    }\n    setSVGData(svg) {\n        this.renderer.setAttribute(svg, 'data-icon', this.type);\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n}\nNzIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconDirective, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NzIconService }, { token: i0.Renderer2 }, { token: NzIconPatchService, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzIconDirective, selector: \"[nz-icon]\", inputs: { nzSpin: \"nzSpin\", nzRotate: \"nzRotate\", nzType: \"nzType\", nzTheme: \"nzTheme\", nzTwotoneColor: \"nzTwotoneColor\", nzIconfont: \"nzIconfont\" }, host: { properties: { \"class.anticon\": \"true\" } }, exportAs: [\"nzIcon\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzIconDirective.prototype, \"nzSpin\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-icon]',\n                    exportAs: 'nzIcon',\n                    host: {\n                        '[class.anticon]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NzIconService }, { type: i0.Renderer2 }, { type: NzIconPatchService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzSpin: [{\n                type: Input\n            }], nzRotate: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzTheme: [{\n                type: Input\n            }], nzTwotoneColor: [{\n                type: Input\n            }], nzIconfont: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzIconModule {\n    static forRoot(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                {\n                    provide: NZ_ICONS,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n    static forChild(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                NzIconPatchService,\n                {\n                    provide: NZ_ICONS_PATCH,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n}\nNzIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconModule, declarations: [NzIconDirective], imports: [PlatformModule], exports: [NzIconDirective] });\nNzIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconModule, imports: [PlatformModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [NzIconDirective],\n                    declarations: [NzIconDirective],\n                    imports: [PlatformModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}