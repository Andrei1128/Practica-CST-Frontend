{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzFormItemFeedbackIconComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.iconType);\n  }\n}\n\nclass NzFormStatusService {\n  constructor() {\n    this.formStatusChanges = new ReplaySubject(1);\n  }\n\n}\n\nNzFormStatusService.ɵfac = function NzFormStatusService_Factory(t) {\n  return new (t || NzFormStatusService)();\n};\n\nNzFormStatusService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzFormStatusService,\n  factory: NzFormStatusService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormStatusService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Used in input-group/input-number-group to make sure components in addon work well\n\n\nclass NzFormNoStatusService {\n  constructor() {\n    this.noFormStatus = new BehaviorSubject(false);\n  }\n\n}\n\nNzFormNoStatusService.ɵfac = function NzFormNoStatusService_Factory(t) {\n  return new (t || NzFormNoStatusService)();\n};\n\nNzFormNoStatusService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzFormNoStatusService,\n  factory: NzFormNoStatusService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormNoStatusService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n};\n\nclass NzFormItemFeedbackIconComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.status = '';\n    this.iconType = null;\n  }\n\n  ngOnChanges(_changes) {\n    this.updateIcon();\n  }\n\n  updateIcon() {\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzFormItemFeedbackIconComponent.ɵfac = function NzFormItemFeedbackIconComponent_Factory(t) {\n  return new (t || NzFormItemFeedbackIconComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzFormItemFeedbackIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormItemFeedbackIconComponent,\n  selectors: [[\"nz-form-item-feedback-icon\"]],\n  hostAttrs: [1, \"ant-form-item-feedback-icon\"],\n  hostVars: 8,\n  hostBindings: function NzFormItemFeedbackIconComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-form-item-feedback-icon-error\", ctx.status === \"error\")(\"ant-form-item-feedback-icon-warning\", ctx.status === \"warning\")(\"ant-form-item-feedback-icon-success\", ctx.status === \"success\")(\"ant-form-item-feedback-icon-validating\", ctx.status === \"validating\");\n    }\n  },\n  inputs: {\n    status: \"status\"\n  },\n  exportAs: [\"nzFormFeedbackIcon\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzFormItemFeedbackIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzFormItemFeedbackIconComponent_span_0_Template, 1, 1, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.iconType);\n    }\n  },\n  dependencies: [i1.NgIf, i2.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormItemFeedbackIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-item-feedback-icon',\n      exportAs: 'nzFormFeedbackIcon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `,\n      host: {\n        class: 'ant-form-item-feedback-icon',\n        '[class.ant-form-item-feedback-icon-error]': 'status===\"error\"',\n        '[class.ant-form-item-feedback-icon-warning]': 'status===\"warning\"',\n        '[class.ant-form-item-feedback-icon-success]': 'status===\"success\"',\n        '[class.ant-form-item-feedback-icon-validating]': 'status===\"validating\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    status: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzFormPatchModule {}\n\nNzFormPatchModule.ɵfac = function NzFormPatchModule_Factory(t) {\n  return new (t || NzFormPatchModule)();\n};\n\nNzFormPatchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzFormPatchModule\n});\nNzFormPatchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, NzIconModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormPatchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzIconModule],\n      exports: [NzFormItemFeedbackIconComponent],\n      declarations: [NzFormItemFeedbackIconComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule, NzFormStatusService };","map":{"version":3,"names":["i0","Injectable","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","ReplaySubject","BehaviorSubject","i1","CommonModule","i2","NzIconModule","NzFormStatusService","constructor","formStatusChanges","ɵfac","ɵprov","type","NzFormNoStatusService","noFormStatus","iconTypeMap","error","validating","success","warning","NzFormItemFeedbackIconComponent","cdr","status","iconType","ngOnChanges","_changes","updateIcon","markForCheck","ChangeDetectorRef","ɵcmp","NgIf","NzIconDirective","args","selector","exportAs","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","template","host","class","NzFormPatchModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Administrator/Facultate/CST/teme/tema4/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-core-form.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormStatusService {\n    constructor() {\n        this.formStatusChanges = new ReplaySubject(1);\n    }\n}\nNzFormStatusService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormStatusService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzFormStatusService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormStatusService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormStatusService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Used in input-group/input-number-group to make sure components in addon work well\nclass NzFormNoStatusService {\n    constructor() {\n        this.noFormStatus = new BehaviorSubject(false);\n    }\n}\nNzFormNoStatusService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormNoStatusService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzFormNoStatusService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormNoStatusService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormNoStatusService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst iconTypeMap = {\n    error: 'close-circle-fill',\n    validating: 'loading',\n    success: 'check-circle-fill',\n    warning: 'exclamation-circle-fill'\n};\nclass NzFormItemFeedbackIconComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.status = '';\n        this.iconType = null;\n    }\n    ngOnChanges(_changes) {\n        this.updateIcon();\n    }\n    updateIcon() {\n        this.iconType = this.status ? iconTypeMap[this.status] : null;\n        this.cdr.markForCheck();\n    }\n}\nNzFormItemFeedbackIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormItemFeedbackIconComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzFormItemFeedbackIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.1.3\", type: NzFormItemFeedbackIconComponent, selector: \"nz-form-item-feedback-icon\", inputs: { status: \"status\" }, host: { properties: { \"class.ant-form-item-feedback-icon-error\": \"status===\\\"error\\\"\", \"class.ant-form-item-feedback-icon-warning\": \"status===\\\"warning\\\"\", \"class.ant-form-item-feedback-icon-success\": \"status===\\\"success\\\"\", \"class.ant-form-item-feedback-icon-validating\": \"status===\\\"validating\\\"\" }, classAttribute: \"ant-form-item-feedback-icon\" }, exportAs: [\"nzFormFeedbackIcon\"], usesOnChanges: true, ngImport: i0, template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormItemFeedbackIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-item-feedback-icon',\n                    exportAs: 'nzFormFeedbackIcon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `,\n                    host: {\n                        class: 'ant-form-item-feedback-icon',\n                        '[class.ant-form-item-feedback-icon-error]': 'status===\"error\"',\n                        '[class.ant-form-item-feedback-icon-warning]': 'status===\"warning\"',\n                        '[class.ant-form-item-feedback-icon-success]': 'status===\"success\"',\n                        '[class.ant-form-item-feedback-icon-validating]': 'status===\"validating\"'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { status: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormPatchModule {\n}\nNzFormPatchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormPatchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzFormPatchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormPatchModule, declarations: [NzFormItemFeedbackIconComponent], imports: [CommonModule, NzIconModule], exports: [NzFormItemFeedbackIconComponent] });\nNzFormPatchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormPatchModule, imports: [CommonModule, NzIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.1.3\", ngImport: i0, type: NzFormPatchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NzIconModule],\n                    exports: [NzFormItemFeedbackIconComponent],\n                    declarations: [NzFormItemFeedbackIconComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule, NzFormStatusService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}